name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Code Quality & Linting

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v4
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Run make lint
        run: |
          make lint

      - name: Run security analysis
        run: |
          make security

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']

    name: Tests (Python ${{ matrix.python-version }})
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v4
        with:
          version: "latest"

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Run tests with coverage
        run: |
          make test

      - name: Upload coverage to Codecov
        if: ${{ env.CODECOV_TOKEN != '' }}
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4.6.0
        with:
          files: coverage.xml
          flags: py${{ matrix.python-version }}
          name: hippocampus-ci
          fail_ci_if_error: false

  build-test:
    runs-on: ubuntu-latest
    name: Build Test
    needs: [lint, test]

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v4
        with:
          version: "latest"

      - name: Build package
        run: |
          uvx --from build pyproject-build

      - name: Test installation
        run: |
          python -m pip install dist/*.whl
          hippo --help

      - name: Smoke run (heuristic pipeline)
        run: |
          rm -rf tmp-smoke || true
          hippo collect -t "A study about GPT-4 citations and sources" -o tmp-smoke --engine=heuristic --verbose
          test -f tmp-smoke/manifest/manifest.json

      - name: Build user docs (MkDocs Material)
        run: |
          uvx --from mkdocs-material mkdocs build --strict -f mkdocs.yml

      - name: Upload docs site artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: site
          path: site
