name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@38f3f104447c67c051c4a08e39b64a148898af3a # v4
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run tests
      run: |
        make test

    - name: Build package
      run: |
        uvx --from build pyproject-build

    - name: Smoke install and basic run
      run: |
        python -m pip install dist/*.whl
        hippo --help
        hippo collect -t "Release smoke test" -o tmp-release --engine=heuristic
        test -f tmp-release/manifest/manifest.json

    - name: Generate changelog
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "Building release for version $VERSION"

        # Extract changelog for this version
        if grep -q "## \[$VERSION\]" CHANGELOG.md; then
          awk "/## \[$VERSION\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
        else
          echo "Release $VERSION" > release_notes.md
          echo "See CHANGELOG.md for details" >> release_notes.md
        fi

    - name: Create GitHub Release
      uses: ncipollo/release-action@b7eabc95ff50cbeeedec83973935c8f306dfcd0b # v1.14.0
      with:
        allowUpdates: true
        replacesArtifacts: true
        artifactErrorsFailBuild: true
        artifacts: "dist/*.whl,dist/*.tar.gz"
        bodyFile: "release_notes.md"
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        tag: ${{ github.ref_name }}
        commit: ${{ github.sha }}

    - name: Publish to PyPI
      if: ${{ !contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc') }}
      uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
      with:
        skip-existing: true

    - name: Build user docs
      run: |
        uvx --from mkdocs-material mkdocs build --strict -f mkdocs.yml

    - name: Deploy docs to GitHub Pages
      uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e # v4.0.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site
